repeat wait() until game:IsLoaded()

if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("LoadingScreen") then
    wait(3)
    repeat wait() until game:GetService("Players").LocalPlayer.PlayerGui.LoadingScreen.Background.Loading:FindFirstChild("Skip")
    if game:GetService("Players").LocalPlayer.PlayerGui.LoadingScreen.Background.Loading:FindFirstChild("Skip") then
        firesignal(game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("LoadingScreen").Background.Loading.Skip.MouseButton1Click)
    end
end

wait(2)

if game:GetService("Players").LocalPlayer.PlayerGui.LoadingScreen.Background.Loading:FindFirstChild("Skip") then
    firesignal(game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("LoadingScreen").Background.Loading.Skip.MouseButton1Click)
end

repeat wait() until game:GetService("Players").LocalPlayer:FindFirstChild("GameLoaded")
if game:GetService("Players").LocalPlayer:FindFirstChild("GameLoaded") then

local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

    getgenv().TrinketFarm = true --- Toggle

    for i,v in pairs(getconnections(game.Players.LocalPlayer.Idled)) do
        v:Disable()
    end

    --// Ver \\--

    local plr           = game:GetService("Players").LocalPlayer
    local TweenService  = game:GetService("TweenService")
    local noclipE       = false
    local antifall      = nil


    local function noclip()
        for i, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
            if v:IsA("BasePart") and v.CanCollide == true then
                v.CanCollide = false
            end
        end
    end
    
    local function moveto(obj, speed)
        local info = TweenInfo.new(((game.Players.LocalPlayer.Character.HumanoidRootPart.Position - obj.Position).Magnitude)/ speed,Enum.EasingStyle.Linear)
        local tween = TweenService:Create(game.Players.LocalPlayer.Character.HumanoidRootPart, info, {CFrame = obj})
    
        if not game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
            antifall = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character.HumanoidRootPart)
            antifall.Velocity = Vector3.new(0,0,0)
            noclipE = game:GetService("RunService").Stepped:Connect(noclip)
            tween:Play()
        end
    
        tween.Completed:Connect(function()
            antifall:Destroy()
            noclipE:Disconnect()
        end)
    end

local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local Deleted = false
function TPReturner()
   local Site;
   if foundAnything == "" then
       Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
   else
       Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
   end
   local ID = ""
   if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
       foundAnything = Site.nextPageCursor
   end
   local num = 0;
   for i,v in pairs(Site.data) do
       local Possible = true
       ID = tostring(v.id)
       if tonumber(v.maxPlayers) > tonumber(v.playing) then
           for _,Existing in pairs(AllIDs) do
               if num ~= 0 then
                   if ID == tostring(Existing) then
                       Possible = false
                   end
               else
                   if tonumber(actualHour) ~= tonumber(Existing) then
                       local delFile = pcall(function()
                           delfile("NotSameServers.json")
                           AllIDs = {}
                           table.insert(AllIDs, actualHour)
                       end)
                   end
               end
               num = num + 1
           end
           if Possible == true then
               table.insert(AllIDs, ID)
               wait()
               pcall(function()
                   writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                   wait()
                   game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
               end)
               wait(4)
           end
        end
   end
end

function Teleport()
    while wait() do
        pcall(function()
            TPReturner()
            if foundAnything ~= "" then
                TPReturner()
            end
        end)
    end
end

    --// Main \\--
    
    if game.Workspace:FindFirstChild("Perfect Crystal") then
        OrionLib:MakeNotification({
            Name = "FOUND!",
            Content = "Enjoy This Fucking Script...",
            Image = "rbxassetid://4483345998",
            Time = 5
        })
    else
        OrionLib:MakeNotification({
            Name = "NotFound!",
            Content = "No Perfect Crystal Found in this Server...",
            Image = "rbxassetid://4483345998",
            Time = 5
        })
    end

    if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("LoadingScreen") then
        repeat wait() until game:GetService("Players").LocalPlayer.PlayerGui.LoadingScreen.Background.Loading:FindFirstChild("Skip")
        firesignal(game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("LoadingScreen").Background.Loading.Skip.MouseButton1Click)
    end

    spawn(function()
        while game:GetService("Players").LocalPlayer:FindFirstChild("GameLoaded") do
            if TrinketFarm and game.Workspace:FindFirstChild("Perfect Crystal") then
                local PerfectCristal = game.Workspace:FindFirstChild("Perfect Crystal")
                local TrinketMag = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - PerfectCristal:GetModelCFrame().p).magnitude
                if TrinketMag <= 20 then
                    game:GetService("ReplicatedStorage").Remotes.Async:FireServer("Character", "Interaction", PerfectCristal.Part)
                else
                moveto(game:GetService("Workspace")["Perfect Crystal"]:GetModelCFrame() * CFrame.new(0,0,0), 75)
                end
            else
                wait(2)
                Teleport()
            end
        end
    end)
end
