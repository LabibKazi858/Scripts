repeat wait() until game:IsLoaded()

if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("LoadingScreen") then
    wait(3)
    repeat wait() until game:GetService("Players").LocalPlayer.PlayerGui.LoadingScreen.Background.Loading:FindFirstChild("Skip")
    if game:GetService("Players").LocalPlayer.PlayerGui.LoadingScreen.Background.Loading:FindFirstChild("Skip") then
        firesignal(game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("LoadingScreen").Background.Loading.Skip.MouseButton1Click)
    end
end

repeat wait() until game:GetService("Players").LocalPlayer:FindFirstChild("GameLoaded")
if game:GetService("Players").LocalPlayer:FindFirstChild("GameLoaded") then

wait(3)

local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

    getgenv().TrinketFarm = true --- Toggle

    for i,v in pairs(getconnections(game.Players.LocalPlayer.Idled)) do
        v:Disable()
    end

    --// Ver \\--

    local plr           = game:GetService("Players").LocalPlayer
    local TweenService  = game:GetService("TweenService")
    local noclipE       = false
    local antifall      = nil


    local function noclip()
        for i, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
            if v:IsA("BasePart") and v.CanCollide == true then
                v.CanCollide = false
            end
        end
    end
    
    local function moveto(obj, speed)
        local info = TweenInfo.new(((game.Players.LocalPlayer.Character.HumanoidRootPart.Position - obj.Position).Magnitude)/ speed,Enum.EasingStyle.Linear)
        local tween = TweenService:Create(game.Players.LocalPlayer.Character.HumanoidRootPart, info, {CFrame = obj})
    
        if not game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
            antifall = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character.HumanoidRootPart)
            antifall.Velocity = Vector3.new(0,0,0)
            noclipE = game:GetService("RunService").Stepped:Connect(noclip)
            tween:Play()
        end
    
        tween.Completed:Connect(function()
            antifall:Destroy()
            noclipE:Disconnect()
        end)
    end

    --// Main \\--
    
    if game.Workspace:FindFirstChild("Perfect Crystal") then
        OrionLib:MakeNotification({
            Name = "FOUND!",
            Content = "Enjoy This Fucking Script...",
            Image = "rbxassetid://4483345998",
            Time = 5
        })
    else
        OrionLib:MakeNotification({
            Name = "NotFound!",
            Content = "No Perfect Crystal Found in this Server...",
            Image = "rbxassetid://4483345998",
            Time = 5
        })
    end

    if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("LoadingScreen") then
        repeat wait() until game:GetService("Players").LocalPlayer.PlayerGui.LoadingScreen.Background.Loading:FindFirstChild("Skip")
        firesignal(game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("LoadingScreen").Background.Loading.Skip.MouseButton1Click)
    end

    spawn(function()
        while game:GetService("Players").LocalPlayer:FindFirstChild("GameLoaded") do
            if TrinketFarm and game.Workspace:FindFirstChild("Perfect Crystal") then
                local PerfectCristal = game.Workspace:FindFirstChild("Perfect Crystal")
                local TrinketMag = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - PerfectCristal:GetModelCFrame().p).magnitude
                if TrinketMag <= 20 then
                    game:GetService("ReplicatedStorage").Remotes.Async:FireServer("Character", "Interaction", PerfectCristal.Part)
                else
                moveto(game:GetService("Workspace")["Perfect Crystal"]:GetModelCFrame() * CFrame.new(0,0,0), 75)
                end
            else
                wait(2)
                local Player = game.Players.LocalPlayer    
                local Http = game:GetService("HttpService")
                local TPS = game:GetService("TeleportService")
                local Api = "https://games.roblox.com/v1/games/"

                local _place,_id = game.PlaceId, game.JobId
                local _servers = Api.._place.."/servers/Public?sortOrder=Desc&limit=100"
                function ListServers(cursor)
                local Raw = game:HttpGet(_servers .. ((cursor and "&cursor="..cursor) or ""))
                return Http:JSONDecode(Raw)
                end

                local Next; repeat
                local Servers = ListServers(Next)
                for i,v in next, Servers.data do
                    if v.playing < v.maxPlayers and v.id ~= _id then
                        local s,r = pcall(TPS.TeleportToPlaceInstance,TPS,_place,v.id,Player)
                        if s then break end
                    end
                end
                
                Next = Servers.nextPageCursor
                until not Next
            end
        end
    end)
end
